; Инициализация сегмента данных
data segment
    message db 'Hello, world!', '$'
    beep_frequency dw 1000 ; Частота звукового сигнала
    beep_duration dw 1000 ; Длительность звукового сигнала
data ends

; Инициализация сегмента кода
code segment
    assume cs:code, ds:data

start:
    mov ax, data ; Загрузка адреса сегмента данных в регистр AX
    mov ds, ax ; Загрузка адреса сегмента данных в регистр DS

    mov ah, 09h ; Выбор функции вывода строки на экран
    mov dx, offset message ; Загрузка адреса строки в регистр DX
    int 21h ; Вызов прерывания для вывода строки на экран

    mov ax, 0 ; Установка регистра AX в ноль для генерации звукового сигнала
    mov al, 0x0E ; Установка регистра AL в значение 0x0E для генерации звукового сигнала
    out 0x61, al ; Запись значения AL в порт 0x61 для генерации звукового сигнала

    mov cx, beep_duration ; Загрузка длительности звукового сигнала в регистр CX
beep_loop:
    dec cx ; Уменьшение значения регистра CX на единицу
    jnz beep_loop ; Переход к метке beep_loop до тех пор, пока значение CX не станет равным нулю

    mov al, 0x00 ; Установка регистра AL в значение 0x00 для остановки звукового сигнала
    out 0x61, al ; Запись значения AL в порт 0x61 для остановки звукового сигнала

    mov ah, 4Ch ; Выбор функции завершения программы
    int 21h ; Вызов прерывания для завершения программы

code ends
end start